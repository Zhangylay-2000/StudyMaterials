SELECT * FROM demo;

---1270
select e1.employee_id
from Employees e1
left join Employees e2
on e1.manager_id = e2.employee_id
left join Employees e3
on e3.manager_id = e2.employee_id
where e3.manager_id =1
and e1.employee_id <> e1.manager_id;


-----number of calls between two people
with cte as (
select case when from_id < to_id then from_id else to_id end as person1,
case when from_id < to_id then to_id else from_id end as person2, duration
  from  Calls)
  
 select person1, person2, count(*) as call_count,
 sum(duration) as total_duration
 from cte
 group by person1, person2
 
person1, person2
 1      2   59
 1      2   11
 
with cte as (
select 
  case when  from_id < to_id then from_id else to_id end as person1,
  case when from_id < to_id then to_id else from_id end as person2,
  duration
  from calls)
  
  select person1, person2, count(*) as call_count,
  sum(duration) as total_duration
  from cte
  group by person1, person2
)

---2066
with cte as (
select *, case when type = 'Deposit' then amount 
else -1*amount end as amount_with_sign
from Transactions)

select account_id, day, sum(amount_with_sign) 
over (partition by account_id order by day rows between upbounded preceding and current row) as balance
from cte
order by account_id,  day

-----1596

with cte as (
select customer_id, product_id, count(*) as num_ordered from orders
  group BYcustomer_id, product_id),
 
cte2 as 
(
select *, first_value(num_ordered) over(partition by customer_id order by num_ordered desc) as most_frequent 
  from cte
 )
 
 
 select c.customer_id, c.product-id, p.product_name
 from cte2 c 
 left join Products PLANon c.product_id = p.product_id
 where c.num_ordered =c.most_frequent
 
 -------------------------
 
 
 with cte as (
 select customer_id, product_id , count(*) as num_ordered 
 from Orders
 group BY customer_id, product_id)
)

cte2 as (
select *,  first_value(num_ordered) over(partition by customer_id order by num_ordered desc) as most_frequent
  from cte
)


select 
c.customer_id, c.prouct_id, p.product_name
from cte2 c left join Products p on c.product_id = p.product_id
where c.num_ordered = c.most_frequent


-------------------------
----maximum transaction each day 
with cte as (
select transaction_id, date_format(day, '%Y-%m-%d') as DAY,
amount
from Transactions),

cte2 as (
select *, max(amount) over (partition by day) as 
maximim_amount
from cte
);


select transaction_id
from cte2 
where amount = maximim_amount
order by transaction_id

-------------------------
----maximum transaction each day 2  
with cte as (
select transaction_id, date_format(day, '%Y-%m-%d') as DAY, amount
from Transactions),

cte2 as 
(
select *, first_value(amount) over(partition by day order by amount desc) as maximum_amount
from CTE)

select transaction_id
from CTE2
where amount = maximum_amount
order by transaction_id 

-------------------------  
-----------1468 Calculate Salaries 

with cte as (
  select *, max(salary) over(partition by company_id) as max_salary
from Salaries)

select company_id, employee_id, employee_name, round(case ewhen max_salary <1000 then salary
                                                    when max_salary between  1000 and 10000 then 0.76*salary
                                                     else 0.51*salary end, 0) as salary
                                                     from cte
                                                     
 -------------------------  
 with cte as (
 select *, max(salary) over(partition by company_id) as max_salary
   from Salaries)

select company_id, employee_id, employee_name , round(case when max_salary < 1000 then salary
                                                     when max_salary between 1000 and 10000 then 0.76*salary
                                                     else 0.51*salary end,0) as salary
                                                     from cte  
                                                     
 -------------------------  
 ------534 games played so far 
 select player_id, event_date, sum(games_played) over (partition by player_id order by event_date rows between unbounded preceding and current row ) as games_played_so_far 
 from Activity
 
 
------------------1398

with cte as (
  select customer_id
  from Orders 
  group by customer_id 
  having sum(product_name ='A')>0 and sum(product_name = 'B')>0 and sum(product_name='C'=0)

  select * 
  from Customers
  where customer_id in (select customer_id from cte)
  order by customer_id 
  

------------------------------ 1715 COunt Appled and Oranges 
  select sum(case when b.chest_id is null then b.apple_count
            else b.apple_count + c.apple_count end) as apple_count, sum(case when b.chest_id is null then b.orange_count else b.orange_count + c.orange_count end) as demoorange_count
  from Boxes b 
  left join chests COUNT on b.chest_id = c. chest_id 
  
  
 --------------------
select sum(case when b.chest_id is null then b.apple_count
          else b.apple_count + c.apple_count end) as apple_count, 
  sum(case when b.chest_id is null then b.orange_count
     else b.orange_count+ c.orange_count end) as orange_count
  from Boxes b 
  left join Chests COUNTon b.chest_id = c.chest_id 
  
  
 ------------------2041 Accepted Candidates From the Interviews 
  select c.candidate_id
  from Rounds RAISEleft join Candidates COUNTon r.interview_id = c.interview_id
  where c.years_of_exp >=2 
  group by c.candidate_id
  having sum(r.score)>15
  

  ------------------1934
  ---confirmation rate  
  
  select 
  s.user_id, case when c.time_stamp is null then 0.00 
  else  round(sum(c.action='confirmed')/count(*),2) 
  end as confirmation_rate 
  from Signups s 
  left join Confirmations c 
  on s.user_id = c.user_id 
  group by s.user_id 
  
  ------------repeat 
  select 
  s.user_id , case when c.time_stamp is null then 0.00 
  else round(sum(c.action='confirmed')/count(*),2)  end as confirmation_rate 
  from Signups s 
  left join Confirmations c 
  on user_id = c.user_id 
  group by s.user_id
  
  ---------1867 . Orders with Maximum Quantity above Average 
  
  with cte as (
  select order_id, max(quantity) as max_order,
  avg(quantity) as avg_order
  from OrderDetails
  group by order_id)
  
  select order_id 
  from cte 
  where max_order > (select max(avg_order) from cte)
  
    ---------1077 --max year of experience 
  with cte as (
  select p.project_id, p.employee_id, 
  e.experience_years, max(e.experience_years)
  over(partition by p.project_id) as max_exp
  from Project p 
  left join Employee e 
  on p.emplloyee_id = e.employee_id
    )
  
  select project_id, employee_id
  from cte 
  where experience_years = max_exp
  
  -----------------------------------
  
 with cte as  (
  select p.project_id, p.employee_id,
  e.experience_years, max(e.experience_years)
  over(partition by p.project_id) as max_exp
  from Project p 
  left join Employee e 
  on p.employee_id = e.employee_id 
  )
  
  select project_id , employee_id
  from cte 
  where experience_years = max_exp 
  -----------------------------------
  ----2238 Number of Times a Driver was a Passanger 
  with cte as (
  select passenger_id, count(*) as num_of_times
  from Rides
  group by passenger_id
  )
  
  select distinct r.driver_id, case c.num_of_times
  is not null then c.num_of_times
  else 0 end as cnt 
  from Rides r 
  left join cte c 
  on r.driver_id = c.passenger_id 

    ------------------------------ 1355 Activity Participants 
  with cte as
  (select activity, count(id) as num_part
  from Friends
  group by activity),
  
  cte2 as 
  (
  select a.name, case when c.num_part is not null then c.num_part 
  else 0 end as frequency
  from Activities a 
  left join cte c 
  on a.name = c.activity)
  
  select name as activity
  from cte2 
  where frequency <> (select max(frequency) from cte2)
  and frequency <> (select min(frequency) from cte2)
  
  
  ----------------------------------------------------------
  
  ----------1709
  with cte as 
  (
  select *, LEAD(visit_date,1) over(partition by user_id order by visit_date) as next_date
    from UserVisits
  ),
  
  cte2 as 
  (select user_id, case when next_date is not null then datediff(next_date, visit_date) else datediff(cast('2021-01-01' as DATE), visit_date) end as windw
  from cte)
  
  select user_id, max(windw) as biggest_window
  from cte2 
  group BY user_id 
  order by user_id 
  
  -------1204 Wayfair -last person who fits into bus 
  with cte as 
  (
  select *, sum(weight) over(order by turn rows between unbounded preceding and current row) as total
    from queue
  )
  select person_sane
  from cte where total<=1000
  order by total desc 
  limit 1
  -----------------------------------------------
  with cte as (
  select *, sum(wieght) over(partition by turn rows between unbounded preceding and current row) as Total
    from Queque
  )
  
  select person_name
  from cte 
  where total<=1000
  order by total desc 
  limit 1;
  -----------------------------------------------
  -----1112. Highest Grade foe Each Student 
  
  with cte as (
  select *, max(grade) over(partition by student_id) as max_grade 
    from Enrollments
  )
  select student_id, min(course_id) as course_id,
  max(grade) as grade
  from cte 
  where grade = max_grade 
  group by student_id
  order by student_id 
  
  ----------------------------------------------
  ---608 Tree Node 
  Select id, case when p_id is null then "Root"
  when id not in (select p_id from Tree where p_id is not null) then "leaf"
  else "Inner" end as type
  from Tree
  order by id 
  
  
   ---------------------------------------------- 
  
  ----1321 Restaurant Growth 
  with cte as (
  select visited_on, sum(amount) as total_amount
    from Customer
    group by visited_on
  ),
  cte2 as (
  select visited_on, sum(total_amount) over(order by visited_on rows between 6 preceding and current row ) as amount,
  round(avg(total_amount) over(order by visited_on rows between 6 preceding and current row),2) as average_amount
  from cte 
    )
  
   
  select *
  from cte2 where visited_on >= (select visited_on from cte2 order by visited_on limit 1) +6 
  order by visited_on 
  
   ---------------------------------------------- 
  ---1532 The Most Recent Three Orders 
  
  
  
  
 

